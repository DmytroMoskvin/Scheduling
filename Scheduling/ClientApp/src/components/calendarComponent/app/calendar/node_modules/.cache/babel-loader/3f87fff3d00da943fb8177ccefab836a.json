{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\terno\\\\OneDrive\\\\Desktop\\\\calendar-ios-type-develop\\\\src\\\\components\\\\CalendarGrid\\\\index.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport styled from 'styled-components';\nconst GridWrapper = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(6, 1fr);\n  grid-gap: 1px;\n  background-color: #4D4C4D;\n`;\nconst CellWrapper = styled.div`\n\tmin-height: 80px;\n\tmin-width: 140px;\n\tbackground-color: ${props => props.isWeekday ? '#27282A' : '#1E1F21'};\n\tcolor: #DDDDDD;\n`;\nconst RowInCell = styled.div`\n\tdisplay: flex;\n\tjustify-content: ${props => props.justifyContent ? props.justifyContent : 'flex-start'};\n`;\nconst DayWrapper = styled.div`\n\theight: 31px;\n\twidth: 31px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 2px;\n;`;\nconst CurrentDay = styled('div')`\n  height: 100%;\n  width: 100%;\n  background: #f00;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst CalendarGrid = ({\n  startDay\n}) => {\n  const totalDays = 42;\n  const day = startDay.clone().subtract(1, 'day');\n  const daysMap = [...Array(totalDays)].map(() => day.add(1, 'day').clone());\n\n  const isCurrentDay = day => moment().isSame(day, 'day'); // console.log(daysMap)\n\n\n  return /*#__PURE__*/React.createElement(GridWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, daysMap.map(dayItem => /*#__PURE__*/React.createElement(CellWrapper, {\n    isWeekday: dayItem.day() === 6 || dayItem.day() === 0,\n    key: dayItem.unix(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(RowInCell, {\n    justifyContent: 'flex-end',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DayWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }\n  }, !isCurrentDay(dayItem) && dayItem.format('D'), isCurrentDay(dayItem) && /*#__PURE__*/React.createElement(CurrentDay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 43\n    }\n  }, dayItem.format('D')))))));\n};\n\nexport { CalendarGrid };","map":{"version":3,"sources":["C:/Users/terno/OneDrive/Desktop/calendar-ios-type-develop/src/components/CalendarGrid/index.js"],"names":["React","moment","styled","GridWrapper","div","CellWrapper","props","isWeekday","RowInCell","justifyContent","DayWrapper","CurrentDay","CalendarGrid","startDay","totalDays","day","clone","subtract","daysMap","Array","map","add","isCurrentDay","isSame","dayItem","unix","format"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAI;;;;;;CAA/B;AAQA,MAAMC,WAAW,GAAGH,MAAM,CAACE,GAAI;;;qBAGVE,KAAK,IAAIA,KAAK,CAACC,SAAN,GAAkB,SAAlB,GAA8B,SAAU;;CAHtE;AAOA,MAAMC,SAAS,GAAGN,MAAM,CAACE,GAAI;;oBAETE,KAAK,IAAIA,KAAK,CAACG,cAAN,GAAuBH,KAAK,CAACG,cAA7B,GAA8C,YAAa;CAFxF;AAKA,MAAMC,UAAU,GAAGR,MAAM,CAACE,GAAI;;;;;;;EAA9B;AASA,MAAMO,UAAU,GAAGT,MAAM,CAAC,KAAD,CAAQ;;;;;;;;CAAjC;;AAUA,MAAMU,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACpC,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,GAAG,GAAGF,QAAQ,CAACG,KAAT,GAAiBC,QAAjB,CAA0B,CAA1B,EAA6B,KAA7B,CAAZ;AACA,QAAMC,OAAO,GAAG,CAAC,GAAGC,KAAK,CAACL,SAAD,CAAT,EAAsBM,GAAtB,CAA0B,MAAML,GAAG,CAACM,GAAJ,CAAQ,CAAR,EAAW,KAAX,EAAkBL,KAAlB,EAAhC,CAAhB;;AAEC,QAAMM,YAAY,GAAIP,GAAD,IAASd,MAAM,GAAGsB,MAAT,CAAgBR,GAAhB,EAAqB,KAArB,CAA9B,CALmC,CAMpC;;;AACA,sBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEG,OAAO,CAACE,GAAR,CAAaI,OAAD,iBACX,oBAAC,WAAD;AACC,IAAA,SAAS,EAAEA,OAAO,CAACT,GAAR,OAAkB,CAAlB,IAAuBS,OAAO,CAACT,GAAR,OAAkB,CADrD;AAEO,IAAA,GAAG,EAAES,OAAO,CAACC,IAAR,EAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIC,oBAAC,SAAD;AAAW,IAAA,cAAc,EAAE,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACU,CAACH,YAAY,CAACE,OAAD,CAAb,IAA0BA,OAAO,CAACE,MAAR,CAAe,GAAf,CADpC,EAEUJ,YAAY,CAACE,OAAD,CAAZ,iBAAyB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,OAAO,CAACE,MAAR,CAAe,GAAf,CAAb,CAFnC,CADD,CAJD,CADD,CAFF,CADD;AAmBA,CA1BD;;AA4BA,SAASd,YAAT","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport styled from 'styled-components';\n\nconst GridWrapper = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(6, 1fr);\n  grid-gap: 1px;\n  background-color: #4D4C4D;\n`;\n\nconst CellWrapper = styled.div`\n\tmin-height: 80px;\n\tmin-width: 140px;\n\tbackground-color: ${props => props.isWeekday ? '#27282A' : '#1E1F21'};\n\tcolor: #DDDDDD;\n`;\n\nconst RowInCell = styled.div`\n\tdisplay: flex;\n\tjustify-content: ${props => props.justifyContent ? props.justifyContent : 'flex-start'};\n`;\n\nconst DayWrapper = styled.div`\n\theight: 31px;\n\twidth: 31px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 2px;\n;`\n\nconst CurrentDay = styled('div')`\n  height: 100%;\n  width: 100%;\n  background: #f00;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst CalendarGrid = ({startDay}) => {\n\tconst totalDays = 42;\n\tconst day = startDay.clone().subtract(1, 'day');\n\tconst daysMap = [...Array(totalDays)].map(() => day.add(1, 'day').clone())\n\n  const isCurrentDay = (day) => moment().isSame(day, 'day');\n\t// console.log(daysMap)\n\treturn (\n\t\t<GridWrapper>\n\t\t\t{\n\t\t\t\tdaysMap.map((dayItem) => (\n\t\t\t\t\t<CellWrapper\n\t\t\t\t\t\tisWeekday={dayItem.day() === 6 || dayItem.day() === 0}\n            key={dayItem.unix()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<RowInCell justifyContent={'flex-end'}>\n\t\t\t\t\t\t\t<DayWrapper>\n                {!isCurrentDay(dayItem) && dayItem.format('D')}\n                {isCurrentDay(dayItem) && <CurrentDay>{dayItem.format('D')}</CurrentDay>}\n\t\t\t\t\t\t\t</DayWrapper>\n\t\t\t\t\t\t</RowInCell>\n\t\t\t\t\t</CellWrapper>\n\t\t\t\t))\n\t\t\t}\n\t\t</GridWrapper>\n\t);\n};\n\nexport { CalendarGrid };\n"]},"metadata":{},"sourceType":"module"}